{
  "ownKey": "kotlindoc",
  "childrenPages": {"kotlindoc": {
    "ownKey": "kotlindoc",
    "ownPages": [{
      "reference": {
        "path": "kotlindoc",
        "baseUrl": "https://drop-project-edu.github.io/drop-project",
        "fileName": "",
        "extension": "html",
        "usePrettyUrl": true,
        "link": "https://drop-project-edu.github.io/drop-project/kotlindoc"
      },
      "description": "",
      "title": "README",
      "content": "<p><img width=\"77px\" height=\"77px\" align=\"right\" src=\"docs/dp_logo.png\"/><\/p>\n<h1 id=\"drop-project---continuous-auto-grader\"><a href=\"#drop-project---continuous-auto-grader\" id=\"drop-project---continuous-auto-grader\" class=\"anchor\"><\/a>Drop Project - Continuous Auto-Grader<\/h1>\n<p><img src=\"https://github.com/drop-project-edu/drop-project/workflows/Run%20Tests/badge.svg?branch=master\" alt=\"Build Status\" />\n<a href=\"https://codecov.io/gh/drop-project-edu/drop-project\"><img src=\"https://codecov.io/gh/drop-project-edu/drop-project/branch/master/graph/badge.svg\" alt=\"codecov\" /><\/a>\n<a href=\"http://www.apache.org/licenses/LICENSE-2.0\"><img src=\"https://img.shields.io/badge/license-Apache%20License%202.0-blue.svg\" alt=\"Apache License\" /><\/a><\/p>\n<p><a href=\"https://heroku.com/deploy?template=https://github.com/drop-project-edu/drop-project\"><img src=\"https://www.herokucdn.com/deploy/button.svg\" alt=\"Deploy\" /><\/a><\/p>\n<p>A web application where students drop their projects to check for correctness and quality.<\/p>\n<p>Several checks are performed on each project:<\/p>\n<ul>\n<li>Does it have the right folder structure and all the mandatory files?<\/li>\n<li>Does it compile?<\/li>\n<li>Does it pass its own tests?<\/li>\n<li>Does it achieve a minimum coverage with its own tests?<\/li>\n<li>Does it pass the teacher tests?<\/li>\n<li>Does it conform to the coding guidelines defined by the teacher?<\/li>\n<li>Does it perform well? (tests with large datasets are measured)<\/li>\n<\/ul>\n<h2 id=\"requirements\"><a href=\"#requirements\" id=\"requirements\" class=\"anchor\"><\/a>Requirements<\/h2>\n<ul>\n<li>Java 8 JDK (a compiler is needed)<\/li>\n<li>Maven<\/li>\n<li>Servlet Engine (Tested with tomcat and jetty)<\/li>\n<li>MySQL<\/li>\n<\/ul>\n<h2 id=\"current-limitations\"><a href=\"#current-limitations\" id=\"current-limitations\" class=\"anchor\"><\/a>Current limitations<\/h2>\n<ul>\n<li>Only works for Java 8+ / Kotlin non-maven projects<\/li>\n<\/ul>\n<h2 id=\"how-does-it-work\"><a href=\"#how-does-it-work\" id=\"how-does-it-work\" class=\"anchor\"><\/a>How does it work?<\/h2>\n<p>Most of the work is done by a Maven Invoker, running several goals on the project.\nThe results are collected into a report that is viewable by the student and the teacher.<\/p>\n<p>Projects must not be maven projects because they are &quot;mavenized&quot; by the server, after uploading.\nIn this context, &quot;mavenizing&quot;, means copying the files into a proper Maven folder structure (e.g. putting the sources\ninto <code>/src/main/java<\/code>), mixing the student files with the teacher unit tests and adding a <code>pom.xml<\/code>\n(also provided by the teacher).<\/p>\n<p>Since checking a project may take some time, it is done asynchronously - the student submits the file and must come\nback later to check the report.<\/p>\n<p><img src=\"docs/how_dp_works.png\" alt=\"How DP works\" /><\/p>\n<h2 id=\"quick-start\"><a href=\"#quick-start\" id=\"quick-start\" class=\"anchor\"><\/a>Quick start<\/h2>\n<p>After cloning the repository, change the following properties:<\/p>\n<pre><code>dropProject.maven.home=&lt;path_to_maven_home&gt;\ndropProject.maven.repository=&lt;path_to_maven_repository&gt;\n<\/code><\/pre>\n<p>in the following files:<\/p>\n<pre><code> src/main/resources/drop-project.properties\n src/test/resources/drop-project-test.properties \n<\/code><\/pre>\n<p>Note:<\/p>\n<ul>\n<li>Configuring the first file will allow you to run Drop Project.<\/li>\n<li>Configuring the second file will allow you to run Drop Project's unit tests.<\/li>\n<li>Linux users: the Maven Home is usually in <code>/usr/share/maven<\/code> (otherwise, try: <code>whereis maven<\/code>) and the Maven Repository is in <code>/home/USERNAME&gt;/.m2<\/code><\/li>\n<li>Windows users: the Maven Home is the installation directory and the Maven Repository is in <code>c:\\Users\\&lt;USERNAME&gt;\\.m2<\/code><\/li>\n<\/ul>\n<p>And run the embedded tomcat runner:<\/p>\n<pre><code>mvn spring-boot:run\n<\/code><\/pre>\n<p>The application should now be accessible on <a href=\"http://localhost:8080\">http://localhost:8080<\/a><\/p>\n<h2 id=\"documentation\"><a href=\"#documentation\" id=\"documentation\" class=\"anchor\"><\/a>Documentation<\/h2>\n<p><a href=\"https://github.com/drop-project-edu/drop-project/wiki/Documentation\">https://github.com/drop-project-edu/drop-project/wiki/Documentation<\/a><\/p>\n<p>To generate source code documentation, run:<\/p>\n<pre><code>mvn dokka:dokka\n<\/code><\/pre>\n<p>The generated documentation will be available in the following folder:<\/p>\n<pre><code>target/dokka/drop-project/index.html\n<\/code><\/pre>\n<h2 id=\"unit-tests\"><a href=\"#unit-tests\" id=\"unit-tests\" class=\"anchor\"><\/a>Unit Tests<\/h2>\n<p>To execute the unit tests, run:<\/p>\n<pre><code>mvn test\n<\/code><\/pre>\n<h2 id=\"unit-test-coverage\"><a href=\"#unit-test-coverage\" id=\"unit-test-coverage\" class=\"anchor\"><\/a>Unit Test Coverage<\/h2>\n<p>To measure the unit test coverage, run:<\/p>\n<pre><code>mvn jacoco:report\n<\/code><\/pre>\n<p>Note: to run the coverage measurement, you must first run the unit tests themselves.<\/p>\n<p>The test coverage report will be available in the following folder:<\/p>\n<pre><code>target/site/jacoco/index.html\n<\/code><\/pre>\n"
    }]
  }}
}